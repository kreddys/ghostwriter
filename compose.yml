volumes:
  langgraph-data:
    driver: local
services:
  langgraph-redis:
    image: redis:6
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 1s
      retries: 5
  langgraph-postgres:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - langgraph-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
  langgraph-api:
    build:
      context: .
      dockerfile: Dockerfile.langgraph
    ports:
      - "8123:8000"
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      REDIS_URI: redis://langgraph-redis:6379
      DATABASE_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGGRAPH_CLOUD_LICENSE_KEY: ${LANGGRAPH_CLOUD_LICENSE_KEY}
      LANGSERVE_GRAPHS: '{"agent": "/app/src/ghostwriter/graph.py:graph"}'
      STORE_CONFIG: '{"index": {"embed": "openai:text-embedding-3-small", "dims": 1536}}'
    volumes:
      - ./src:/app/src
      #LOG_LEVEL: debug

  fastapi-wrapper:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      langgraph-api:
        condition: service_healthy
    env_file:
      - .env
    environment:
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGGRAPH_API_URL: http://langgraph-api:8000
    volumes:
      - ./src:/app/src

  streamlit-app:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    depends_on:
      fastapi-wrapper:
        condition: service_started
    env_file:
      - .env
    environment:
      FASTAPI_URL: http://fastapi-wrapper:8000
    volumes:
      - ./src:/app/src
